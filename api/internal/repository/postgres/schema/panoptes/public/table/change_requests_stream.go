//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ChangeRequestsStream = newChangeRequestsStreamTable("public", "change_requests_stream", "")

type changeRequestsStreamTable struct {
	postgres.Table

	// Columns
	ID                postgres.ColumnString
	AggregateID       postgres.ColumnString
	OccurredAt        postgres.ColumnTimestampz
	Payload           postgres.ColumnString
	Type              postgres.ColumnString
	SourceID          postgres.ColumnString
	SourceIntegration postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ChangeRequestsStreamTable struct {
	changeRequestsStreamTable

	EXCLUDED changeRequestsStreamTable
}

// AS creates new ChangeRequestsStreamTable with assigned alias
func (a ChangeRequestsStreamTable) AS(alias string) *ChangeRequestsStreamTable {
	return newChangeRequestsStreamTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ChangeRequestsStreamTable with assigned schema name
func (a ChangeRequestsStreamTable) FromSchema(schemaName string) *ChangeRequestsStreamTable {
	return newChangeRequestsStreamTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ChangeRequestsStreamTable with assigned table prefix
func (a ChangeRequestsStreamTable) WithPrefix(prefix string) *ChangeRequestsStreamTable {
	return newChangeRequestsStreamTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ChangeRequestsStreamTable with assigned table suffix
func (a ChangeRequestsStreamTable) WithSuffix(suffix string) *ChangeRequestsStreamTable {
	return newChangeRequestsStreamTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newChangeRequestsStreamTable(schemaName, tableName, alias string) *ChangeRequestsStreamTable {
	return &ChangeRequestsStreamTable{
		changeRequestsStreamTable: newChangeRequestsStreamTableImpl(schemaName, tableName, alias),
		EXCLUDED:                  newChangeRequestsStreamTableImpl("", "excluded", ""),
	}
}

func newChangeRequestsStreamTableImpl(schemaName, tableName, alias string) changeRequestsStreamTable {
	var (
		IDColumn                = postgres.StringColumn("id")
		AggregateIDColumn       = postgres.StringColumn("aggregate_id")
		OccurredAtColumn        = postgres.TimestampzColumn("occurred_at")
		PayloadColumn           = postgres.StringColumn("payload")
		TypeColumn              = postgres.StringColumn("type")
		SourceIDColumn          = postgres.StringColumn("source_id")
		SourceIntegrationColumn = postgres.StringColumn("source_integration")
		allColumns              = postgres.ColumnList{IDColumn, AggregateIDColumn, OccurredAtColumn, PayloadColumn, TypeColumn, SourceIDColumn, SourceIntegrationColumn}
		mutableColumns          = postgres.ColumnList{AggregateIDColumn, OccurredAtColumn, PayloadColumn, TypeColumn, SourceIDColumn, SourceIntegrationColumn}
	)

	return changeRequestsStreamTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                IDColumn,
		AggregateID:       AggregateIDColumn,
		OccurredAt:        OccurredAtColumn,
		Payload:           PayloadColumn,
		Type:              TypeColumn,
		SourceID:          SourceIDColumn,
		SourceIntegration: SourceIntegrationColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
